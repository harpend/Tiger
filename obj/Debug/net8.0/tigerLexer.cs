//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\jackt\OneDrive\Documents\Compilers\Tiger\Tiger\ANTLR\Tiger.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tiger.ANTLR {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TigerLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, COMMENT=7, INT=8, STRING=9, 
		WHILE=10, FOR=11, BREAK=12, ARRAY=13, IN=14, FUNCTION=15, IF=16, ELSE=17, 
		DO=18, NIL=19, PLUS=20, MINUS=21, DIV=22, MULT=23, LT=24, GT=25, LE=26, 
		GE=27, EQ=28, AND=29, OR=30, ASGN=31, IDENTIFIER=32, INTLIT=33, STRLIT=34, 
		WS=35;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "COMMENT", "INT", "STRING", 
		"WHILE", "FOR", "BREAK", "ARRAY", "IN", "FUNCTION", "IF", "ELSE", "DO", 
		"NIL", "PLUS", "MINUS", "DIV", "MULT", "LT", "GT", "LE", "GE", "EQ", "AND", 
		"OR", "ASGN", "IDENTIFIER", "INTLIT", "STRLIT", "WS"
	};


	public TigerLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'('", "')'", "'{'", "'}'", "','", null, "'int'", "'string'", 
		"'while'", "'for'", "'break'", "'array'", "'in'", "'fn'", "'if'", "'else'", 
		"'do'", "'nil'", "'+'", "'-'", "'/'", "'*'", "'<'", "'>'", "'<='", "'>='", 
		"'='", "'&&'", "'||'", "':='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, "COMMENT", "INT", "STRING", 
		"WHILE", "FOR", "BREAK", "ARRAY", "IN", "FUNCTION", "IF", "ELSE", "DO", 
		"NIL", "PLUS", "MINUS", "DIV", "MULT", "LT", "GT", "LE", "GE", "EQ", "AND", 
		"OR", "ASGN", "IDENTIFIER", "INTLIT", "STRLIT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tiger.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2%\xD3\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3"+
		"\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\a\bZ\n\b\f\b\xE\b]\v\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3"+
		"\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3"+
		"\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\a!\xB8\n!\f!\xE!\xBB\v!"+
		"\x3\"\x6\"\xBE\n\"\r\"\xE\"\xBF\x3#\x3#\x3#\x3#\a#\xC6\n#\f#\xE#\xC9\v"+
		"#\x3#\x3#\x3$\x6$\xCE\n$\r$\xE$\xCF\x3$\x3$\x2\x2\x2%\x3\x2\x3\x5\x2\x4"+
		"\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$"+
		"G\x2%\x3\x2\b\x4\x2\f\f\xF\xF\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61"+
		"\x63|\x3\x2\x32;\x4\x2$$^^\x5\x2\v\f\xF\xF\"\"\xD8\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2"+
		"\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2"+
		"\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2"+
		"\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2"+
		"\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2"+
		"\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2"+
		"\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2"+
		"\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x3I\x3\x2\x2\x2\x5K\x3\x2\x2\x2"+
		"\aM\x3\x2\x2\x2\tO\x3\x2\x2\x2\vQ\x3\x2\x2\x2\rS\x3\x2\x2\x2\xFU\x3\x2"+
		"\x2\x2\x11\x62\x3\x2\x2\x2\x13\x66\x3\x2\x2\x2\x15m\x3\x2\x2\x2\x17s\x3"+
		"\x2\x2\x2\x19w\x3\x2\x2\x2\x1B}\x3\x2\x2\x2\x1D\x83\x3\x2\x2\x2\x1F\x86"+
		"\x3\x2\x2\x2!\x89\x3\x2\x2\x2#\x8C\x3\x2\x2\x2%\x91\x3\x2\x2\x2\'\x94"+
		"\x3\x2\x2\x2)\x98\x3\x2\x2\x2+\x9A\x3\x2\x2\x2-\x9C\x3\x2\x2\x2/\x9E\x3"+
		"\x2\x2\x2\x31\xA0\x3\x2\x2\x2\x33\xA2\x3\x2\x2\x2\x35\xA4\x3\x2\x2\x2"+
		"\x37\xA7\x3\x2\x2\x2\x39\xAA\x3\x2\x2\x2;\xAC\x3\x2\x2\x2=\xAF\x3\x2\x2"+
		"\x2?\xB2\x3\x2\x2\x2\x41\xB5\x3\x2\x2\x2\x43\xBD\x3\x2\x2\x2\x45\xC1\x3"+
		"\x2\x2\x2G\xCD\x3\x2\x2\x2IJ\a=\x2\x2J\x4\x3\x2\x2\x2KL\a*\x2\x2L\x6\x3"+
		"\x2\x2\x2MN\a+\x2\x2N\b\x3\x2\x2\x2OP\a}\x2\x2P\n\x3\x2\x2\x2QR\a\x7F"+
		"\x2\x2R\f\x3\x2\x2\x2ST\a.\x2\x2T\xE\x3\x2\x2\x2UV\a\x31\x2\x2VW\a\x31"+
		"\x2\x2W[\x3\x2\x2\x2XZ\n\x2\x2\x2YX\x3\x2\x2\x2Z]\x3\x2\x2\x2[Y\x3\x2"+
		"\x2\x2[\\\x3\x2\x2\x2\\^\x3\x2\x2\x2][\x3\x2\x2\x2^_\a\f\x2\x2_`\x3\x2"+
		"\x2\x2`\x61\b\b\x2\x2\x61\x10\x3\x2\x2\x2\x62\x63\ak\x2\x2\x63\x64\ap"+
		"\x2\x2\x64\x65\av\x2\x2\x65\x12\x3\x2\x2\x2\x66g\au\x2\x2gh\av\x2\x2h"+
		"i\at\x2\x2ij\ak\x2\x2jk\ap\x2\x2kl\ai\x2\x2l\x14\x3\x2\x2\x2mn\ay\x2\x2"+
		"no\aj\x2\x2op\ak\x2\x2pq\an\x2\x2qr\ag\x2\x2r\x16\x3\x2\x2\x2st\ah\x2"+
		"\x2tu\aq\x2\x2uv\at\x2\x2v\x18\x3\x2\x2\x2wx\a\x64\x2\x2xy\at\x2\x2yz"+
		"\ag\x2\x2z{\a\x63\x2\x2{|\am\x2\x2|\x1A\x3\x2\x2\x2}~\a\x63\x2\x2~\x7F"+
		"\at\x2\x2\x7F\x80\at\x2\x2\x80\x81\a\x63\x2\x2\x81\x82\a{\x2\x2\x82\x1C"+
		"\x3\x2\x2\x2\x83\x84\ak\x2\x2\x84\x85\ap\x2\x2\x85\x1E\x3\x2\x2\x2\x86"+
		"\x87\ah\x2\x2\x87\x88\ap\x2\x2\x88 \x3\x2\x2\x2\x89\x8A\ak\x2\x2\x8A\x8B"+
		"\ah\x2\x2\x8B\"\x3\x2\x2\x2\x8C\x8D\ag\x2\x2\x8D\x8E\an\x2\x2\x8E\x8F"+
		"\au\x2\x2\x8F\x90\ag\x2\x2\x90$\x3\x2\x2\x2\x91\x92\a\x66\x2\x2\x92\x93"+
		"\aq\x2\x2\x93&\x3\x2\x2\x2\x94\x95\ap\x2\x2\x95\x96\ak\x2\x2\x96\x97\a"+
		"n\x2\x2\x97(\x3\x2\x2\x2\x98\x99\a-\x2\x2\x99*\x3\x2\x2\x2\x9A\x9B\a/"+
		"\x2\x2\x9B,\x3\x2\x2\x2\x9C\x9D\a\x31\x2\x2\x9D.\x3\x2\x2\x2\x9E\x9F\a"+
		",\x2\x2\x9F\x30\x3\x2\x2\x2\xA0\xA1\a>\x2\x2\xA1\x32\x3\x2\x2\x2\xA2\xA3"+
		"\a@\x2\x2\xA3\x34\x3\x2\x2\x2\xA4\xA5\a>\x2\x2\xA5\xA6\a?\x2\x2\xA6\x36"+
		"\x3\x2\x2\x2\xA7\xA8\a@\x2\x2\xA8\xA9\a?\x2\x2\xA9\x38\x3\x2\x2\x2\xAA"+
		"\xAB\a?\x2\x2\xAB:\x3\x2\x2\x2\xAC\xAD\a(\x2\x2\xAD\xAE\a(\x2\x2\xAE<"+
		"\x3\x2\x2\x2\xAF\xB0\a~\x2\x2\xB0\xB1\a~\x2\x2\xB1>\x3\x2\x2\x2\xB2\xB3"+
		"\a<\x2\x2\xB3\xB4\a?\x2\x2\xB4@\x3\x2\x2\x2\xB5\xB9\t\x3\x2\x2\xB6\xB8"+
		"\t\x4\x2\x2\xB7\xB6\x3\x2\x2\x2\xB8\xBB\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2"+
		"\xB9\xBA\x3\x2\x2\x2\xBA\x42\x3\x2\x2\x2\xBB\xB9\x3\x2\x2\x2\xBC\xBE\t"+
		"\x5\x2\x2\xBD\xBC\x3\x2\x2\x2\xBE\xBF\x3\x2\x2\x2\xBF\xBD\x3\x2\x2\x2"+
		"\xBF\xC0\x3\x2\x2\x2\xC0\x44\x3\x2\x2\x2\xC1\xC7\a$\x2\x2\xC2\xC6\n\x6"+
		"\x2\x2\xC3\xC4\a^\x2\x2\xC4\xC6\v\x2\x2\x2\xC5\xC2\x3\x2\x2\x2\xC5\xC3"+
		"\x3\x2\x2\x2\xC6\xC9\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2"+
		"\x2\xC8\xCA\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xCA\xCB\a$\x2\x2\xCB\x46\x3"+
		"\x2\x2\x2\xCC\xCE\t\a\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xCF\x3\x2\x2\x2\xCF"+
		"\xCD\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0\xD1\x3\x2\x2\x2\xD1\xD2\b$\x2"+
		"\x2\xD2H\x3\x2\x2\x2\t\x2[\xB9\xBF\xC5\xC7\xCF\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tiger.ANTLR
