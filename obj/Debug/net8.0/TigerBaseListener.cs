//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\jackt\OneDrive\Documents\Compilers\Tiger\Tiger\ANTLR\Tiger.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tiger.ANTLR {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITigerListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TigerBaseListener : ITigerListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>LeftVal</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftVal([NotNull] TigerParser.LeftValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LeftVal</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftVal([NotNull] TigerParser.LeftValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Nil</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNil([NotNull] TigerParser.NilContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Nil</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNil([NotNull] TigerParser.NilContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerLiteral([NotNull] TigerParser.IntegerLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IntegerLiteral</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerLiteral([NotNull] TigerParser.IntegerLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] TigerParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringLiteral</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] TigerParser.StringLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionCall</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] TigerParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionCall</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] TigerParser.FunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>RecordCreation</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordCreation([NotNull] TigerParser.RecordCreationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RecordCreation</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordCreation([NotNull] TigerParser.RecordCreationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ArrayCreation</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayCreation([NotNull] TigerParser.ArrayCreationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrayCreation</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayCreation([NotNull] TigerParser.ArrayCreationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>NegationExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegationExpr([NotNull] TigerParser.NegationExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegationExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegationExpr([NotNull] TigerParser.NegationExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>MultExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultExpr([NotNull] TigerParser.MultExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultExpr([NotNull] TigerParser.MultExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivExpr([NotNull] TigerParser.DivExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DivExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivExpr([NotNull] TigerParser.DivExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpr([NotNull] TigerParser.AddExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpr([NotNull] TigerParser.AddExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubExpr([NotNull] TigerParser.SubExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubExpr([NotNull] TigerParser.SubExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>NeqExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNeqExpr([NotNull] TigerParser.NeqExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NeqExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNeqExpr([NotNull] TigerParser.NeqExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LtExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLtExpr([NotNull] TigerParser.LtExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LtExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLtExpr([NotNull] TigerParser.LtExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>GtExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGtExpr([NotNull] TigerParser.GtExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GtExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGtExpr([NotNull] TigerParser.GtExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LeExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeExpr([NotNull] TigerParser.LeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LeExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeExpr([NotNull] TigerParser.LeExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>GeExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeExpr([NotNull] TigerParser.GeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GeExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeExpr([NotNull] TigerParser.GeExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>EqExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqExpr([NotNull] TigerParser.EqExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EqExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqExpr([NotNull] TigerParser.EqExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] TigerParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] TigerParser.AndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] TigerParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] TigerParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenNestExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenNestExpr([NotNull] TigerParser.ParenNestExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenNestExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenNestExpr([NotNull] TigerParser.ParenNestExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Assignment</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] TigerParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Assignment</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] TigerParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>IfExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpr([NotNull] TigerParser.IfExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpr([NotNull] TigerParser.IfExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>WhileExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileExpr([NotNull] TigerParser.WhileExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileExpr([NotNull] TigerParser.WhileExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ForExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForExpr([NotNull] TigerParser.ForExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForExpr([NotNull] TigerParser.ForExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>BreakExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakExpr([NotNull] TigerParser.BreakExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakExpr([NotNull] TigerParser.BreakExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LetExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetExpr([NotNull] TigerParser.LetExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LetExpr</c>
	/// labeled alternative in <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetExpr([NotNull] TigerParser.LetExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] TigerParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] TigerParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.decs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecs([NotNull] TigerParser.DecsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.decs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecs([NotNull] TigerParser.DecsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDec([NotNull] TigerParser.DecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.dec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDec([NotNull] TigerParser.DecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.tydec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTydec([NotNull] TigerParser.TydecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.tydec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTydec([NotNull] TigerParser.TydecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.ty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTy([NotNull] TigerParser.TyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.ty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTy([NotNull] TigerParser.TyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.tyfields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTyfields([NotNull] TigerParser.TyfieldsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.tyfields"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTyfields([NotNull] TigerParser.TyfieldsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.typeid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeid([NotNull] TigerParser.TypeidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.typeid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeid([NotNull] TigerParser.TypeidContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.vardec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVardec([NotNull] TigerParser.VardecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.vardec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVardec([NotNull] TigerParser.VardecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.fundec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFundec([NotNull] TigerParser.FundecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.fundec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFundec([NotNull] TigerParser.FundecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.lvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLvalue([NotNull] TigerParser.LvalueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.lvalue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLvalue([NotNull] TigerParser.LvalueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.exprs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprs([NotNull] TigerParser.ExprsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.exprs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprs([NotNull] TigerParser.ExprsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] TigerParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TigerParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] TigerParser.ExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Tiger.ANTLR
